{"version":3,"sources":["getWeb3.js","components/Erc20Form.js","components/Erc721Form.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Erc20Form","props","_contract","contract","useState","setContract","mintValue","setMintValue","transferValue","setTransferValue","transferAddress","setTransferAddress","burnValue","setBurnValue","mintInputError","setMintInputError","transferInputError","setTransferInputError","burnInputError","setBurnInputError","mintErrText","setMintErrText","transferErrText","setTransferErrText","burnErrText","setBurnErrText","mintInput","useRef","transferAmountInput","transferAddressInput","burnInput","useEffect","Box","display","alignItems","justifyContent","Typography","variant","sx","color","symbol","padding","Chip","icon","label","totalSupply","balances","TextField","type","id","size","onChange","event","RegExp","test","target","value","inputRef","error","helperText","Button","onClick","onMint","Number","current","fullWidth","onTransfer","onBurn","Erc721Form","paddingTop","ownedTokensCount","MainPage","account1","setAccount1","contracts","setContracts","erc20Contract","setErc20Contract","erc721Contract","setErc721Contract","setMintErc20Response","setMintErc721Receipt","setTransferResponse","setBurnResponse","setErc20Balance","setErc721Balance","setErc20AddressIsValid","setErc721AddressIsValid","openDialogue","setOpenDialogue","loadAccount","eth","getAccounts","accounts","_account1","loadContracts","account","net","getId","netId","erc20Data","MalcolmERC20","networks","erc721Data","MalcolmERC721","erc20Abi","abi","erc20Addr","address","_erc20Contract","Contract","methods","call","erc20TotalSupply","erc20Symbol","balanceOf","erc20Balances","prev","erc721Abi","erc721Addr","_erc721Contract","erc721OwnedTokensCount","erc721Symbol","erc20","erc721","mintErc20","mint","send","from","then","receipt","mintErc721","transferErc20","to","utils","isAddress","transfer","handleDialogueOpen","transferErc721","getPastEvents","fromBlock","res","mostRecentTokenId","length","returnValues","tokenId","burnErc20","burn","burnErc721","handleAccountChange","location","reload","handleDialogueClose","interval","setInterval","clearInterval","on","removeListener","Paper","elevation","width","square","Grid","container","rowSpacing","item","xs","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","App","Boolean","hostname","match","theme","createTheme","palette","background","default","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79985787.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Accounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, TextField, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Chip } from \"@mui/material\";\r\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\r\n\r\nexport default function Erc20Form(props) {\r\n    \r\n    const _contract = props.contract;\r\n    const [contract, setContract] = useState(\"\");\r\n    const [mintValue, setMintValue] = useState(0);\r\n    const [transferValue, setTransferValue] = useState(0);\r\n    const [transferAddress, setTransferAddress] = useState(0);\r\n    const [burnValue, setBurnValue] = useState(0);\r\n    const [mintInputError, setMintInputError] = useState(false);\r\n    const [transferInputError, setTransferInputError] = useState(false);\r\n    const [burnInputError, setBurnInputError] = useState(false);\r\n    const [mintErrText, setMintErrText] = useState(\"\");\r\n    const [transferErrText, setTransferErrText] = useState(\"\");\r\n    const [burnErrText, setBurnErrText] = useState(\"\");\r\n    const mintInput = useRef(null);\r\n    const transferAmountInput = useRef(null);\r\n    const transferAddressInput = useRef(null);\r\n    const burnInput = useRef(null);\r\n\r\n    useEffect( async () => {\r\n        setContract(_contract);\r\n      }, [_contract]);\r\n\r\n    const onMintChange = (event) => {\r\n        let regex = new RegExp(\"^\\\\d+$\");\r\n        let isValid = regex.test(event.target.value);\r\n        if (!isValid) {\r\n            setMintInputError(true);\r\n            setMintErrText(\"Invalid input\");\r\n        }\r\n        else {\r\n            setMintInputError(false)\r\n            setMintErrText(\"\");\r\n            setMintValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const mintHandler = () => {\r\n        if (mintValue == null || mintValue == 0) {\r\n            setMintInputError(true);\r\n            setMintErrText(\"Invalid input\");\r\n        }\r\n        else {\r\n            props.onMint(Number(mintValue));\r\n            setMintValue(null);\r\n            mintInput.current.value = \"\";\r\n        }\r\n    };\r\n\r\n    const onTransferChange = (event) => {\r\n        let regex = new RegExp(\"^\\\\d+$\");\r\n        let isValid = regex.test(event.target.value);\r\n        if (!isValid) {\r\n            setTransferInputError(true);\r\n            setTransferErrText(\"Invalid input\");\r\n        }\r\n        else {\r\n            setTransferInputError(false)\r\n            setTransferErrText(\"\");\r\n            setTransferValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const onTransferAddressChange = (event) => {\r\n        setTransferAddress(event.target.value);\r\n    };\r\n\r\n    const transferHandler = () => {\r\n        if (transferValue == null || transferValue == 0 || transferAddress == null || transferAddress === \"\") {\r\n            setTransferInputError(true);\r\n            setTransferErrText(\"Invalid input\");\r\n        }\r\n        else {\r\n            props.onTransfer(Number(transferValue), transferAddress)\r\n            setTransferValue(null);\r\n            setTransferAddress(null);\r\n            transferAmountInput.current.value = \"\";\r\n            transferAddressInput.current.value = \"\";\r\n        }\r\n    };\r\n\r\n    const onBurnChange = (event) => {\r\n        let regex = new RegExp(\"^\\\\d+$\");\r\n        let isValid = regex.test(event.target.value);\r\n        if (!isValid) {\r\n            setBurnInputError(true);\r\n            setBurnErrText(\"Invalid input\");\r\n        }\r\n        else {\r\n            setBurnInputError(false)\r\n            setBurnErrText(\"\");\r\n            setBurnValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const burnHandler = () => {\r\n        if (burnValue == null || burnValue == 0) {\r\n            setBurnInputError(true);\r\n            setBurnErrText(\"Invalid input\");\r\n        }\r\n        else {\r\n            props.onBurn(Number(burnValue));\r\n            setBurnValue(null);\r\n            burnInput.current.value = \"\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Typography variant=\"h3\" sx={{color: \"#002984\"}}>\r\n                    {contract.symbol}\r\n                </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Supply:\r\n                </Typography>\r\n                <Chip icon={<CurrencyExchangeIcon/>} variant=\"filled\" label={contract.totalSupply} color=\"secondary\"/>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Balances:\r\n                </Typography>\r\n                <Chip icon={<CurrencyExchangeIcon/>} variant=\"oulined\" label={contract.balances} color=\"secondary\"/>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Mint Value: \r\n                </Typography>\r\n                <TextField type=\"number\" id=\"mintValue\" size=\"small\" onChange={onMintChange} inputRef={mintInput} variant=\"outlined\" label=\"Amount\" error={mintInputError} helperText={mintErrText}></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Button variant=\"contained\" size=\"large\" onClick={mintHandler} fullWidth padding={\"10px\"}>Mint</Button>\r\n            </Box>\r\n            &nbsp;\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Transfer Value: \r\n                </Typography>\r\n                <TextField type=\"number\" id=\"transferValue\" size=\"small\" onChange={onTransferChange} inputRef={transferAmountInput} variant=\"outlined\" label=\"Amount\" error={transferInputError} helperText={transferErrText}></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Transfer Address: \r\n                </Typography>\r\n                <TextField id=\"transferAddress\" size=\"small\" onChange={onTransferAddressChange} inputRef={transferAddressInput} variant=\"outlined\" label=\"Address\"></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Button variant=\"contained\" size=\"large\" onClick={transferHandler} fullWidth padding={\"10px\"}>Transfer</Button>\r\n            </Box>\r\n            &nbsp;\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Burn \r\n                </Typography>\r\n                <TextField type=\"number\" id=\"transferValue\" size=\"small\" onChange={onBurnChange} inputRef={burnInput} variant=\"outlined\" label=\"Amount\" error={burnInputError} helperText={burnErrText}></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Button variant=\"contained\" size=\"large\" onClick={burnHandler} fullWidth padding={\"10px\"}>Burn</Button>\r\n            </Box>\r\n            &nbsp;\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Chip } from \"@mui/material\";\r\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\r\nimport { TextField } from \"@mui/material\";\r\n\r\nexport default function Erc721Form(props)  {\r\n\r\n    const _contract = props.contract;\r\n    const [contract, setContract] = useState(\"\");\r\n    const [transferAddress, setTransferAddress] = useState(0);\r\n    const transferAddressInput = useRef(null);\r\n\r\n    useEffect( async () => {\r\n        setContract(_contract);\r\n      }, [_contract]);\r\n\r\n    const mintHandler = () => {\r\n        props.onMint();\r\n    };\r\n\r\n    const onTransferAddressChange = (event) => {\r\n        setTransferAddress(event.target.value);\r\n    };\r\n\r\n    const transferHandler = () => {\r\n        props.onTransfer(transferAddress)\r\n        setTransferAddress(null);\r\n        transferAddressInput.current.value = \"\";\r\n    };\r\n\r\n    const burnHandler = () => {\r\n        props.onBurn();\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Typography variant=\"h3\" sx={{color: \"#002984\"}}>\r\n                    {contract.symbol}\r\n                </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"} paddingTop={\"30px\"}>\r\n                <Typography  variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Token Count: \r\n                </Typography>\r\n                <Chip icon={<CurrencyExchangeIcon/>} variant=\"filled\" label={contract.ownedTokensCount} color=\"secondary\"/>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"} paddingTop={\"30px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Mint \r\n                </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" paddingTop=\"10px\">\r\n                <Button variant=\"contained\" size=\"large\" onClick={mintHandler} fullWidth padding={\"10px\"}>Mint</Button>\r\n            </Box>\r\n            &nbsp;\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Transfer Address: \r\n                </Typography>\r\n                <TextField id=\"transferAddress\" size=\"small\" onChange={onTransferAddressChange} inputRef={transferAddressInput} variant=\"outlined\" label=\"Address\"></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Button variant=\"contained\" size=\"large\" onClick={transferHandler} fullWidth padding={\"10px\"}>Transfer</Button>\r\n            </Box>\r\n            &nbsp;\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" padding={\"10px\"}>\r\n                <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n                    Burn \r\n                </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Button variant=\"contained\" size=\"large\" onClick={burnHandler} fullWidth padding={\"10px\"}>Burn</Button>\r\n            </Box>\r\n            &nbsp;\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport MalcolmERC20 from \"../contracts/MalcolmERC20.json\";\r\nimport MalcolmERC721 from \"../contracts/MalcolmERC721.json\"\r\nimport Erc20Form from \"./Erc20Form\";\r\nimport Erc721Form from \"./Erc721Form\";\r\nimport { Box, Typography } from \"@mui/material/\";\r\nimport {Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Web3 from \"web3\";\r\n\r\nexport default function MainPage() {\r\n    const { ethereum } = window;\r\n    const [account1, setAccount1] = useState(\"\");\r\n    const [contracts, setContracts] = useState(\"\");\r\n    const [erc20Contract, setErc20Contract] = useState(\r\n      {\r\n        totalSupply: \"\",\r\n        symbol: \"\",\r\n        balances: \"\"\r\n      }\r\n    );\r\n    const [erc721Contract, setErc721Contract] = useState(\r\n      {\r\n        ownedTokensCount: \"\",\r\n        symbol: \"\",\r\n      }\r\n    );\r\n    const [mintErc20Response, setMintErc20Response] = useState(null);\r\n    const [mintErc721Receipt, setMintErc721Receipt] = useState(null);\r\n    const [transferResponse, setTransferResponse] = useState(null);\r\n    const [burnResponse, setBurnResponse] = useState(null);\r\n    const [erc20Balance, setErc20Balance] = useState(null);\r\n    const [erc721Balance, setErc721Balance] = useState(null);\r\n    const [erc20AddressIsValid, setErc20AddressIsValid] = useState(null);\r\n    const [erc721AddressIsValid, setErc721AddressIsValid] = useState(null);\r\n    const [openDialogue, setOpenDialogue] = useState(false);\r\n  \r\n    const loadAccount = async (web3) => {\r\n      const accounts = await web3.eth.getAccounts();\r\n      //console.log(accounts);\r\n      if (accounts) {\r\n        let _account1 = accounts[0];\r\n        setAccount1(_account1);\r\n        return _account1;\r\n      }\r\n      \r\n    }\r\n  \r\n    // \"networks\": {\r\n    //   \"3\": {\r\n    //     \"events\": {},\r\n    //     \"links\": {},\r\n    //     \"address\": \"...\",\r\n    //     \"transactionHash\": \"...\"\r\n    //    ...\r\n    //   }\r\n    const loadContracts = async (web3, account) => {\r\n      const netId = await web3.eth.net.getId();\r\n      const erc20Data = MalcolmERC20.networks[netId];\r\n      const erc721Data = MalcolmERC721.networks[netId];\r\n  \r\n      const erc20Abi = MalcolmERC20.abi;\r\n      const erc20Addr = erc20Data.address;\r\n      const _erc20Contract = new web3.eth.Contract(erc20Abi, erc20Addr);\r\n      const erc20TotalSupply = await _erc20Contract.methods.totalSupply().call();\r\n      const erc20Symbol = await _erc20Contract.methods.symbol().call();\r\n      const erc20Balances = await _erc20Contract.methods.balanceOf(account).call();\r\n      setErc20Balance(erc20Balances);\r\n      setErc20Contract((prev) => {\r\n        return {\r\n          ...prev,\r\n          totalSupply: erc20TotalSupply,\r\n          symbol: erc20Symbol,\r\n          balances: erc20Balances\r\n        }\r\n      });\r\n  \r\n      const erc721Abi = MalcolmERC721.abi;\r\n      const erc721Addr = erc721Data.address;\r\n      const _erc721Contract = new web3.eth.Contract(erc721Abi, erc721Addr);\r\n      const erc721OwnedTokensCount = await _erc721Contract.methods.balanceOf(account).call()\r\n      const erc721Symbol = await _erc721Contract.methods.symbol().call();\r\n      setErc721Balance(erc721OwnedTokensCount);\r\n      setErc721Contract((prev) => {\r\n        return {\r\n          ...prev,\r\n          ownedTokensCount: erc721OwnedTokensCount,\r\n          symbol: erc721Symbol\r\n        }\r\n      })\r\n  \r\n      const contracts = {\r\n        erc20: _erc20Contract,\r\n        erc721: _erc721Contract\r\n      };\r\n      console.log(contracts);\r\n      return contracts;\r\n      \r\n    }\r\n\r\n    const mintErc20 = async (value) => {\r\n      //console.log(\"mint: \" + value);\r\n      contracts.erc20.methods.mint(account1, value).send({from: account1})\r\n      .then(function(receipt) {\r\n        setMintErc20Response(receipt);\r\n        //console.log(receipt);\r\n      });\r\n    };\r\n\r\n    const mintErc721 = async () => {\r\n      console.log(\"mint\");\r\n      contracts.erc721.methods.mint(account1).send({from: account1})\r\n      .then(function(receipt) {\r\n        setMintErc721Receipt(receipt);\r\n        //console.log(receipt);\r\n      });\r\n    };\r\n\r\n    const transferErc20 = async (value, to) => {\r\n      console.log(\"Checking address...\");\r\n      let addressValid = Web3.utils.isAddress(to);\r\n      if (addressValid) {\r\n        setErc20AddressIsValid(true);\r\n        console.log(\"transfer: \" + value + \" to : \" + to);\r\n        contracts.erc20.methods.transfer(to, value).send({from: account1})\r\n        .then(function(receipt) {\r\n          setTransferResponse(receipt);\r\n          //console.log(receipt);\r\n        });\r\n      }\r\n      else {\r\n        console.log(\"Invalid address\");\r\n        setErc20AddressIsValid(false);\r\n        handleDialogueOpen();\r\n      }\r\n    }\r\n\r\n    const transferErc721 = async (to) => {\r\n      console.log(\"Checking address...\");\r\n      let addressValid = Web3.utils.isAddress(to);\r\n      if (addressValid) {\r\n        setErc721AddressIsValid(true);\r\n        const res = await contracts.erc721.getPastEvents(\"allEvents\", {fromBlock: \"earliest\"});\r\n        const mostRecentTokenId = res[res.length - 1].returnValues.tokenId;\r\n        //console.log(mostRecentTokenId);\r\n        console.log(\"transfer token to : \" + to);\r\n        contracts.erc721.methods.transfer(to, mostRecentTokenId).send({from: account1})\r\n        .then(function(receipt) {\r\n          setTransferResponse(receipt);\r\n          //console.log(receipt);\r\n        });\r\n      }\r\n      else {\r\n        console.log(\"Invalid address\");\r\n        setErc721AddressIsValid(false);\r\n        handleDialogueOpen();\r\n      }\r\n    };\r\n\r\n    const burnErc20 = async (value) => {\r\n      console.log(\"Burning \" + value + \" tokens\");\r\n      contracts.erc20.methods.burn(value).send({from: account1})\r\n      .then(function(receipt) {\r\n        setBurnResponse(receipt);\r\n        //console.log(receipt);\r\n      });\r\n    };\r\n\r\n    const burnErc721 = async () => {\r\n      console.log(\"Burning token\");\r\n      const res = await contracts.erc721.getPastEvents(\"allEvents\", {fromBlock: \"earliest\"});\r\n      //console.log(res);\r\n      //console.log(res[res.length - 1]);\r\n      const mostRecentTokenId = res[res.length - 1].returnValues.tokenId;\r\n      //console.log(mostRecentTokenId);\r\n      contracts.erc721.methods.burn(mostRecentTokenId).send({from: account1})\r\n      .then(function(receipt) {\r\n        setBurnResponse(receipt);\r\n        //console.log(receipt);\r\n      });\r\n    }\r\n\r\n    const handleAccountChange = (...args) => {\r\n      const accounts = args[0];\r\n      if (accounts.length === 0) {\r\n        console.log(\"Please connect to MetaMask\");\r\n      }\r\n      else if (accounts[0] !== account1) {\r\n        setAccount1(accounts[0]);\r\n        //console.log(accounts[0]);\r\n        window.location.reload(false);\r\n      }\r\n    };\r\n\r\n    const handleDialogueOpen = () => {\r\n      setOpenDialogue(true);\r\n    };\r\n\r\n    const handleDialogueClose = () => {\r\n      setOpenDialogue(false);\r\n    };\r\n\r\n    useEffect( async () => {\r\n      const web3 = await getWeb3();\r\n      const account = await loadAccount(web3);\r\n      const contracts = await loadContracts(web3, account);\r\n      const interval = setInterval(() => {\r\n          loadContracts(web3, account);\r\n      }, 10000);\r\n      setContracts(contracts);\r\n      return () => {\r\n        clearInterval(interval);\r\n      }\r\n    }, []);\r\n\r\n    useEffect( async () => {\r\n      ethereum.on(\"accountsChanged\", handleAccountChange);\r\n      return () => {\r\n        ethereum.removeListener(\"accountsChanged\", handleAccountChange);\r\n      }\r\n    }, [account1])\r\n\r\n\r\n    return (\r\n    <Box>\r\n        <Box sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n            padding: \"50px\"\r\n        }}>\r\n            <Paper elevation={12} sx={{display: \"flex\", justifyContent: \"space-between\", width: \"100%\", padding: \"75px\" }} square={false}>\r\n            <Grid container rowSpacing={2}>\r\n                <Grid item xs = {5}>\r\n                <Erc20Form contract={erc20Contract} onMint={mintErc20} onTransfer={transferErc20} onBurn={burnErc20}></Erc20Form>\r\n                </Grid>\r\n                <Grid item xs = {2}>\r\n                </Grid>\r\n                <Grid item xs = {5}>\r\n                <Erc721Form contract={erc721Contract} onMint={mintErc721} onTransfer={transferErc721} onBurn={burnErc721}></Erc721Form>\r\n                </Grid>\r\n            </Grid>\r\n            </Paper>\r\n        </Box >\r\n        <Box sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n            *Page refreshes every 10 seconds\r\n            </Typography>\r\n        </Box>\r\n        <Box sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Typography variant=\"button\" sx={{color: \"#002984\"}}>\r\n            **It may take a moment for the balances, supply and token count to be updated**\r\n            </Typography>\r\n        </Box>\r\n\r\n        <Dialog\r\n          open={openDialogue}\r\n          onClose={handleDialogueClose}\r\n        >\r\n          <DialogTitle>\r\n            Invalid Transfer Address\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please ensure address is a valid Ethereum address\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogueClose}>OK</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n    </Box>\r\n    )\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport MainPage from \"./components/MainPage\";\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <MainPage></MainPage>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport { createTheme, ThemeProvider } from \"@mui/material\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#dedede\",\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n    <ThemeProvider theme={theme}><App /></ThemeProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}